# file = 0... data.txt
# ___ line i_ ?.r.l. # DON'T DO THIS ANYMORE!
#     print ? e.._''
#
# file = 0... data.txt
# ___ line i_ ? # no need to call readlines
#     print ? e.._'' # iterator reads next line each time
#
# # Hello file world!
# # Bye file world.
# # ######################################################################################################################
#
# ___ line i_ 0... data.txt # even shorter: temporary file object
#     print ? e.._'' # auto-closed when garbage collected
#
# # Hello file world!
# # Bye file world.
# # ######################################################################################################################
#
# file = 0... data.txt # read methods: empty at EOF
# ?.r.l.
# # 'Hello file world!\n'
# # ######################################################################################################################
#
# ?.r.l.
# # 'Bye file world.\n'
# # ######################################################################################################################
#
# ?.r.l.
# # ''
# # ######################################################################################################################
# file = 0... data.txt # iterators: exception at EOF
# ?. -n # no need to call iter(file) first,
# # 'Hello file world!\n' # since files are their own iterator
# # ######################################################################################################################
#
# ?. -n
# # 'Bye file world.\n'
# # ######################################################################################################################
#
# ?. -n
# # Traceback (most recent call last):
# # File "<stdin>", line 1, in <module>
# # StopIteration
# # ######################################################################################################################
#
# 0...('data.txt').r.l. # always read lines
# # ['Hello file world!\n', 'Bye file world.\n']
# # ######################################################################################################################
#
# li.. 0... data.txt # force line iteration
# # ['Hello file world!\n', 'Bye file world.\n']
# # ######################################################################################################################
#
# lines _ line.rstr.. ___ ? i_ 0... data.txt # comprehension
# ?
# # ['Hello file world!', 'Bye file world.']
# # ######################################################################################################################
#
# lines _ line.up.. ___ ? i_ 0... data.txt # arbitrary actions
# ?
# # ['HELLO FILE WORLD!\n', 'BYE FILE WORLD.\n']
# # ######################################################################################################################
#
# list(map(str.split, 0...('data.txt'))) # apply a function
# # [['Hello', 'file', 'world!'], ['Bye', 'file', 'world.']]
# # ######################################################################################################################
#
# line = 'Hello file world!\n'
# line in 0...('data.txt') # line membership
# # True
# # ######################################################################################################################
