# records _ by.. char * 8) ___ ? i_ _'spam'
# ?
# # [b'ssssssss', b'pppppppp', b'aaaaaaaa', b'mmmmmmmm']
# # ######################################################################################################################
#
# file _ o.. random.bin ___
# ___ rec i_ r... # write four records
#     size _ ?.write ? # bytes for binary mode
#
# ?.flush
# pos = ?.se.. 0 # read entire file
# print ?.r...
# # b'ssssssssppppppppaaaaaaaammmmmmmm'
# # ######################################################################################################################
#
# file _ ... random.bin ___
# print ?.r... # read entire file
# # b'ssssssssppppppppaaaaaaaammmmmmmm'
# # ######################################################################################################################
#
# record = b'X' * 8
# ?.se.. 0 # update first record
# ?.w... r..
# ?.se.. le. r... * 2) # update third record
# ?.w... _'Y' * 8)
# ?.se.. 8
# ?.r... le_ r.. # fetch second record
# # b'pppppppp'
# # ######################################################################################################################
#
# ?.r... le. r.. # fetch next (third) record
# # b'YYYYYYYY'
# # ######################################################################################################################
#
# ?.se.. 0 # read entire ?
# ?.r...
# # b'XXXXXXXXppppppppYYYYYYYYmmmmmmmm'
# # c:\temp> type random.bin # the view outside Python
# # XXXXXXXXppppppppYYYYYYYYmmmmmmmm
# # ######################################################################################################################
#
# # c:\temp> python
# ? = o___ random.bin _ # text mode ok if no encoding/endlines
# reclen = 8
# ?.se.. ? * 3 # fetch record 4
# ?.r... ?
# # 'mmmmmmmm'
# # ######################################################################################################################
#
# ?.se..(? * 1) # fetch record 2
# ?.r... ?
#
# # 'pppppppp'
# file = o... ran__.bin __ # binary mode works the same here
# ?.se.. ? * 2) # fetch record 3
# ?.r... ? # returns byte strings
# # b'YYYYYYYY'
# # ######################################################################################################################
#
# data = 'sp\xe4m' # data to your script
# ? le. ? # 4 unicode chars, 1 nonascii
# # ('späm', 4)
# # ######################################################################################################################
#
# ?.en.. utf8 le. ?.en.. utf8 # bytes written to file
# # (b'sp\xc3\xa4m', 5)
# # ######################################################################################################################
#
# f = o... 'test' mo.. _ __ en.. _ utf8 # use text mode, encoded
# ?.w.. d..
# ?.fl..
# ?.se.. 0 f.r... 1 # ascii bytes work
# # 's'
# # ######################################################################################################################
#
# ?.se.. 2 ?.r... 1 # as does 2-byte nonascii
# #'ä'
# # ######################################################################################################################
#
# d... 3 # but offset 3 is not 'm' !
# # 'm'
# # ######################################################################################################################
#
# ?.se.. 3 ?.r... 1
# # UnicodeDecodeError: 'utf8' codec can't decode byte 0xa4 in position 0:
# # unexpected code byte
# # ######################################################################################################################