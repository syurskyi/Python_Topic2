# # -*- coding: utf-8 -*-
#
# html = """<html>
# <head><title>%(title)s</title>
# </head>
# <body>
# <h1>%(h1)s</h1>
# <div>%(content)s</div>
# </body>
# </html>"""
# arr = {"title":    "Это название документа",
#        "h1":       "Это заголовок первого уровня",
#        "content":  "Это основное содержание страницы"}
# print(h.. @ a.. # Подставляем значения и выводим шаблон
# input()
#
"""
expandtabs ( [ <Ширина поля>] )
"""
# заменяет символ табуляции пробелами таким образом,
# чтобы общая ширина фрагмента вместе с текстом, расположенным перед символом табуляции, была равна указанной величине.
# Если параметр не указан, то ширина пол.я
# предполагается равной 8 символам.
# s = "1\t12\t123\t"
# print("'__'"  ?.e.. 4
# # "'1   12  123 '"
#
# s = "\t"
# print("'__' — '__'" _  ?.ex.t. ?.ex.t. 4
# # "'        ' — '    '"
# s = "1234\t"
# print("'__'" _ ?.ex.t. 4
# # "'1234    '"
#
# s = "12345\t123456\t1234567\t1234567890\t"
# print("'__'"  ?.ex.t.4
# # "'12345   123456  1234567 1234567890  '"
#
"""
center ( <Ширина> [, <Символ> J ) 
"""
#  производит выравнивание строки по центру внутри
# поля указанной ширины. Если второй параметр не указан, то справа и слева от исходной строки будут добавлены пробелы
# s = "str"
# print ?.c.. 15 ?.c. 11 "-"
# # ('      str      ', '----str----')
#
#
# s = "str"
# print("'_15_' '_-15_' '__'"  ? ? ?.c.. 15
# # "'            str' 'str            ' '      str      '"
#
#
# s = "string"
# print(?.c.. 6 ?.c.. 5
# # ('string', 'string')
#
"""
lj ust ( <Ширина> [, <Символ>] ) 
"""
# производит выравнивание строки по левому краю внутри поля указанной ширины. Если второй параметр не указан, то справа
# от исходной строки будут добавлены пробелы. Если количество символов в строке превышает ширину поля, то значение
# ширины игнорируется, и строка возвращается полностью.
# s = "string"
# print(?.lj.. 15 ?.lj.. 15 "-"
# # ('string         ', 'string---------')
# print(?.lj.. 6 ?.lj.. 5
# # ('string', 'string')
#
"""
rj ust ( <Ширина> [, <Символ>] ) 
"""
# производит выравнивание строки по правому краю внутри поля указанной ширины. Если второй параметр не указан, то слева
# от исходной строки будут добавлены пробелы. Если количество символов в строке превышает ширину поля, то значение
# ширины игнорируется, и строка возвращается полностью. П
# s = "string"
# print(?.rj.. 15 ?.rj.. 15 "-"
# # ('         string', '---------string')
# print ?.rj.. 6 ?.rj.. 5
# # ('string', 'string')
#
"""
zfill (<Ширина>) -
"""
#  производит выравнивание фрагмента по правому краю внутри поля указанной ширины. Слева от фрагмента будут добавлены
#  нули. Если количество символов в строке превышает ширину поля, то значение ширины игнорируется, и строка возвращается
#  полностью.
# print("5".z.. 20 "123456".z.. 5
# # ('00000000000000000005', '123456')
