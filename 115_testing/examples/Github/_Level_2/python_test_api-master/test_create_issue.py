from base_api import BaseApi
import logging
import datetime
import random


# logging.basicConfig(level=logging.DEBUG)


class TestCreateIssue(BaseApi):

    def test_create_issue(self):
        # logger = logging.getLogger('test_create_issue')
        url = self.base_url + '/issue'

        current_time = str(datetime.datetime.now())[0:-7]

        list_of_objects = ['robots', 'humans', 'animals', 'developers', 'engineers', 'QA engineers']
        desc_object = random.choice(list_of_objects)

        params = {
            'project': 'API',
            'summary': 'Generated by robots at ' + current_time,
            'description': 'Hail the ' + desc_object + '!'
        }

        # r = requests.put(url, data=params, cookies=self.cookies)
        r = self.request(url, 'put', params)

        # self.assertEquals(r.status_code, 202)
        self.assert_for_status_code_and_content_type(r, 201)
        self.assertTrue(r.headers['Location'])
        # print "Location response header is: " + r.headers['Location']

        # self.log(logger, r)
        issue_id = r.headers['Location'].split('/')[-1]

        url = self.base_url + '/issue/' + issue_id
        r = self.request(url, 'get')
        self.assertEquals(r.status_code, 200)
