# # -*- coding: utf-8 -*-
#
# # Строка-разделитель выводиться не будет
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, _____
#
# # Нестандартная строка-разделитель
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, ___ ,
#
# # Подавление вывода символа конца строки
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, ___
#
# # Вывод двух строк в одной строке
# x = 'spam'
# y = 99
# z = ['eggs']
# print(x, y, z, ____
# print(x, y, z)
#
# # Нестандартный разделитель строк
# x = 'spam'
# y = 99
# z = ['eggs']
# print(x, y, z, ___ '...\n'
#
# # Несколько именованных аргументов
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, s_ ... e__ !\n
#
# # Порядок не имеет значения
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, e_ !\n _ ...
#
# # Вывод в файл
# x = 'spam'
# y = 99
# z = ['eggs']
# print x, y, z, s_ ... f.. o.. data.txt _
#
# # Вывод содержимого текстового файла
# x = 'spam'
# y = 99
# z = ['eggs']
# print o.. data.txt.r..
#
# # Сохранить для последующего восстановления
# x = 'spam'
# y = 99
# z = ['eggs']
#
# # # # Перенаправить вывод в файл
# # # # Выведет в файл, а не на экран
# # # # Вытолкнуть буферы на диск
# # # # Восстановить первоначальный поток
# # # # Результаты более ранних обращений
# _____ ___
# x = 'spam'
# y = 99
# z = ['eggs']
# temp = __. ->
# ___. -> = o.. log.txt _
# print('spam')
# print(1, 2, 3)
# ___. -> .c..
# ___. -> = temp
# print('back here')
# print o.. log.txt .r..
#
#
#
# # В версии 3.0 именованный аргумент file позволяет перенаправить в файл вывод единственного вызова функции print,
# # не прибегая к переустановке значения sys.stdout.
#
# x = 'spam'
# y = 99
# z = ['eggs']
# log = o.. log.txt _
#
# # # 3.0
# # # # Вывести в объект, напоминающий файл
# # # # Вывести в оригинальный поток вывода
#
# # Эти способы перенаправления удобно использовать, когда в одной и той же программе необходимо организовать
# # вывод и в файл, и в стандартный поток вывода. Однако если вы собираетесь использовать эти формы вывода,
# # вам потребуется создать объект-файл (или объект, который имеет метод write, как и объект
# # файла) и передавать инструкции этот объект, а не строку с именем файла:
#
# _______ ___
# x = 'spam'
# y = 99
# z = ['eggs']
# log = o.. log.txt _
# print(1, 2, 3, f.. ?
#
# # Эти расширенные формы инструкции print нередко используются для вывода сообщений об ошибках в стандартный
# # поток ошибок, sys.stderr. Вы можете либо использовать его метод write и форматировать выводимые строки вручную,
# # либо использовать синтаксис перенаправления:
#
# _______ ___
# ___.s_e_.w.. 'Bad!' * 8) + '\n')
#
# # вывод текста обоими способами в версии 3.0,
# # перенаправление вывода во внешний файл и выполняется проверка содержимого текстовых файлов:
# X = 1; Y = 2
#
