# -*- coding: utf-8 -*-

# # Декоратор - это функция, ожидающая ДРУГУЮ функцию в качестве параметра
# ___ my_shiny_new_decorator a_function_to_decorate
#     # Внутри себя декоратор определяет функцию-"обёртку".
#     # Она будет (что бы вы думали?..) обёрнута вокруг декорируемой,
#     # получая возможность исполнять произвольный код до и после неё.
#
#     __ the_wrapper_around_the_original_function
#         # Поместим здесь код, который мы хотим запускать ДО вызова
#         # оригинальной функции
#         print Я - код, который отработает до вызова функции
#
#         # ВЫЗОВЕМ саму декорируемую функцию
#         ?
#
#         # А здесь поместим код, который мы хотим запускать ПОСЛЕ вызова
#         # оригинальной функции
#         print А я - код, срабатывающий после
#
#     # На данный момент функция "a_function_to_decorate" НЕ ВЫЗЫВАЛАСЬ НИ РАЗУ
#
#     # Теперь, вернём функцию-обёртку, которая содержит в себе
#     # декорируемую функцию, и код, который необходимо выполнить до и после.
#     # Всё просто!
#     r_ ?
#
#
# # Представим теперь, что у нас есть функция, которую мы не планируем больше трогать.
# ___ a_stand_alone_function
#     print Я простая одинокая функция, ты ведь не посмеешь меня изменять?..
#
#
# ?
# # выведет: Я простая одинокая функция, ты ведь не посмеешь меня изменять?..
#
# # Однако, чтобы изменить её поведение, мы можем декорировать её, то есть
# # Просто передать декоратору, который обернет исходную функцию в любой код,
# # который нам потребуется, и вернёт новую, готовую к использованию функцию:
#
# a_stand_alone_function_decorated _ m... a...
# ?
# # выведет:
# # Я - код, который отработает до вызова функции
# # Я простая одинокая функция, ты ведь не посмеешь меня изменять?..
# # А я - код, срабатывающий после
#
# # Наверное, теперь мы бы хотели, чтобы каждый раз, во время вызова a_stand_alone_function, вместо неё вызывалась
# # a_stand_alone_function_decorated. Нет ничего проще, просто перезапишем a_stand_alone_function функцией,
# # которую нам вернул my_shiny_new_decorator:
#
# _my___
# ___ another_stand_alone_function
#     print Оставь меня в покое
#
#
# ?
# # выведет:
# # Я - код, который отработает до вызова функции
# # Оставь меня в покое
# # А я - код, срабатывающий после
