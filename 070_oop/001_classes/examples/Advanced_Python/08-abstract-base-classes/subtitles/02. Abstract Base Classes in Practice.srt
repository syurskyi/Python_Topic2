1
00:00:02,346 --> 00:00:05,757
Consider the code in weapons. py. In this

2
00:00:05,757 --> 00:00:09,567
module we've defined a Sword class with a

3
00:00:09,567 --> 00:00:11,804
metaclass, SwordMeta. SwordMeta defines

4
00:00:11,804 --> 00:00:14,571
the dunder subclasscheck method to check

5
00:00:14,571 --> 00:00:17,456
for the existence of callable swipe and

6
00:00:17,456 --> 00:00:20,918
sharpen attributes on the class. In this

7
00:00:20,918 --> 00:00:24,569
situation Sword will play the role of a

8
00:00:24,569 --> 00:00:27,914
virtual base class. A few simple tests at

9
00:00:27,914 --> 00:00:31,312
the REPL confirm that BroadSword and

10
00:00:31,312 --> 00:00:33,874
SamuraiSword are indeed considered

11
00:00:33,874 --> 00:00:36,918
subclasses of Sword, even though there is

12
00:00:36,918 --> 00:00:38,996
no explicit relationship through

13
00:00:38,996 --> 00:00:43,642
inheritance, so BroadSword is a subclass

14
00:00:43,642 --> 00:00:48,543
of Sword, SamuraiSword is a subclass of

15
00:00:48,543 --> 00:00:53,908
Sword, but Rifle is not a subclass of

16
00:00:53,908 --> 00:00:56,737
Sword. This isn't the whole story though,

17
00:00:56,737 --> 00:00:59,734
as tests of instances rather than classes

18
00:00:59,734 --> 00:01:03,924
using isinstance will return inconsistent

19
00:01:03,924 --> 00:01:07,165
results. Here we create an instance of

20
00:01:07,165 --> 00:01:08,367
SamuraiSword and try

21
00:01:08,367 --> 00:01:12,245
isinstance(samurai_sword, Sword). This is

22
00:01:12,245 --> 00:01:15,136
false. This is because the isinstance

23
00:01:15,136 --> 00:01:17,894
machinery checks for the existence of the

24
00:01:17,894 --> 00:01:20,605
dunder instancecheck method, which we have

25
00:01:20,605 --> 00:01:24,610
not yet implemented. Let's do so now. Our

26
00:01:24,610 --> 00:01:26,730
dunder instance check implementation

27
00:01:26,730 --> 00:01:28,873
simply delegates to dunder subclasscheck,

28
00:01:28,873 --> 00:01:32,485
which is called as a metamethod on the

29
00:01:32,485 --> 00:01:38,017
actual class, cls. With this change in

30
00:01:38,017 --> 00:01:44,131
place our call to isinstance produces a

31
00:01:44,131 --> 00:01:50,038
result consistent with the result from

32
00:01:50,038 --> 00:01:52,209
issubclass. This surprising technique is

33
00:01:52,209 --> 00:01:54,584
used in Python for some of the collection

34
00:01:54,584 --> 00:01:56,918
abstract base classes, including Sized,

35
00:01:56,918 --> 00:02:00,188
which is used to indicate whether we can

36
00:02:00,188 --> 00:02:02,376
determine the number of items in a

37
00:02:02,376 --> 00:02:05,184
collection with the built-in len function.

38
00:02:05,184 --> 00:02:08,927
Let's import Sized from collections. abc

39
00:02:08,927 --> 00:02:11,497
and create a new collection called

40
00:02:11,497 --> 00:02:14,062
SizedCollection, which just holds a simple

41
00:02:14,062 --> 00:02:16,534
integer size. SizedCollection implements

42
00:02:16,534 --> 00:02:20,017
dunder init to initialize the size, and

43
00:02:20,017 --> 00:02:23,276
dunder len to retrieve the size via the

44
00:02:23,276 --> 00:02:27,522
built-in len function. As you can see,

45
00:02:27,522 --> 00:02:31,218
implementing a dunder len method is

46
00:02:31,218 --> 00:02:35,658
sufficient to be considered a subclass of

47
00:02:35,658 --> 00:02:39,423
the Sized abstract base class. It's worth

48
00:02:39,423 --> 00:02:41,204
bearing in mind that our implementations

49
00:02:41,204 --> 00:02:43,488
of dunder instancecheck and dunder

50
00:02:43,488 --> 00:02:46,305
subclasscheck in SwordMeta are somewhat

51
00:02:46,305 --> 00:02:49,022
naÃ¯ve, as they make no attempt to check

52
00:02:49,022 --> 00:02:51,006
the regular, non-virtual based classes of

53
00:02:51,006 --> 00:02:53,258
the objects being tested, which could lead

54
00:02:53,258 --> 00:02:56,508
to some surprising behavior. Bear in mind

55
00:02:56,508 --> 00:02:58,594
that correctly overriding dunder

56
00:02:58,594 --> 00:03:01,175
subclasscheck and dunder instancecheck on

57
00:03:01,175 --> 00:03:04,756
your own metaclasses is difficult. Don't

58
00:03:04,756 --> 00:03:12,000
worry though, we'll be presenting some more digestible alternatives shortly.

