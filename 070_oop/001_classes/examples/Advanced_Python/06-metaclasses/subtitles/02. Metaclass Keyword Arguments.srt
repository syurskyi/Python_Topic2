1
00:00:01,564 --> 00:00:03,365
Now let's look at a little known feature

2
00:00:03,365 --> 00:00:05,425
of Python which allows us to pass

3
00:00:05,425 --> 00:00:08,970
additional arguments to the metaclass.

4
00:00:08,970 --> 00:00:11,256
Earlier we skipped over the fact that

5
00:00:11,256 --> 00:00:13,799
dunder prepare, dunder new, and dunder

6
00:00:13,799 --> 00:00:18,741
init can all support a kwargs parameter to

7
00:00:18,741 --> 00:00:21,533
accept arbitrary keyword arguments. These

8
00:00:21,533 --> 00:00:24,103
can be supplied in the parameter list when

9
00:00:24,103 --> 00:00:26,176
defining a class, and any key with

10
00:00:26,176 --> 00:00:27,841
arguments provided over and above the

11
00:00:27,841 --> 00:00:31,461
named metaclass argument will be forwarded

12
00:00:31,461 --> 00:00:35,351
to these three special methods. Here's an

13
00:00:35,351 --> 00:00:36,992
example where we've passed a tension

14
00:00:36,992 --> 00:00:39,917
keyword argument with a value of 496 in

15
00:00:39,917 --> 00:00:42,663
the parameter list of our Reticulator

16
00:00:42,663 --> 00:00:46,692
class definition, which uses TracingMeta

17
00:00:46,692 --> 00:00:50,979
as its metaclass. As you can see, the

18
00:00:50,979 --> 00:00:52,909
arguments are dutifully forwarded to the

19
00:00:52,909 --> 00:00:55,828
metaclass methods, and the argument value

20
00:00:55,828 --> 00:00:59,463
could have been used to configure the

21
00:00:59,463 --> 00:01:02,593
class object. This allows the class

22
00:01:02,593 --> 00:01:07,298
statement to be used as a kind of class

23
00:01:07,298 --> 00:01:09,563
factory. Here's an interesting example,

24
00:01:09,563 --> 00:01:12,687
which uses keyword args. The dunder new

25
00:01:12,687 --> 00:01:15,451
method of the entries meta metaclass

26
00:01:15,451 --> 00:01:18,277
expects kwargs to contain a num_entries

27
00:01:18,277 --> 00:01:21,960
key, which maps to an integer value. This

28
00:01:21,960 --> 00:01:24,165
is used to populate the namespace with

29
00:01:24,165 --> 00:01:26,400
named entries using the letters of the

30
00:01:26,400 --> 00:01:28,998
alphabet. At first sight it looks like we

31
00:01:28,998 --> 00:01:32,160
only need to override dunder new to

32
00:01:32,160 --> 00:01:36,533
achieve our aims. Let's try to use it.

33
00:01:36,533 --> 00:01:38,893
We'll import EntriesMeta from entries, and

34
00:01:38,893 --> 00:01:41,818
then define a new class, AtoZ, with

35
00:01:41,818 --> 00:01:44,697
EntriesMeta as its metaclass, and passing

36
00:01:44,697 --> 00:01:48,556
the custom argument, num_entries, as 26 to

37
00:01:48,556 --> 00:01:52,616
get the 26 letters of the English

38
00:01:52,616 --> 00:01:54,892
alphabet. The trace output shows that

39
00:01:54,892 --> 00:01:56,928
num_entries 26 is successfully passed to

40
00:01:56,928 --> 00:02:00,858
dunder new, but later we get an error from

41
00:02:00,858 --> 00:02:03,142
dunder init. The problem we've set up

42
00:02:03,142 --> 00:02:05,117
deliberately here is that both dunder new

43
00:02:05,117 --> 00:02:08,245
and dunder init must accept any additional

44
00:02:08,245 --> 00:02:11,311
keyword arguments. They must have the same

45
00:02:11,311 --> 00:02:14,275
signature. We need a do nothing dunder

46
00:02:14,275 --> 00:02:18,742
init to keep Python happy. Here it is.

47
00:02:18,742 --> 00:02:22,115
With this important change in place

48
00:02:22,115 --> 00:02:25,025
everything works as intended. We import

49
00:02:25,025 --> 00:02:28,980
EntriesMeta, define AtoZ with EntriesMeta

50
00:02:28,980 --> 00:02:33,081
and num_entries 26. We see the num_entries

51
00:02:33,081 --> 00:02:36,078
item arriving keyword args, and we can see

52
00:02:36,078 --> 00:02:41,502
the namespace object populated with all

53
00:02:41,502 --> 00:02:45,637
the additional entries. Of course, we can

54
00:02:45,637 --> 00:02:48,125
just use a regular argument, as well as or

55
00:02:48,125 --> 00:02:50,936
instead of double star keyword args. Let's

56
00:02:50,936 --> 00:02:53,049
convert num_entries into a proper

57
00:02:53,049 --> 00:02:56,705
argument, in addition to double star

58
00:02:56,705 --> 00:03:02,924
keyword args. This makes the code much

59
00:03:02,924 --> 00:03:07,000
easier to understand, and still works exactly as before.

