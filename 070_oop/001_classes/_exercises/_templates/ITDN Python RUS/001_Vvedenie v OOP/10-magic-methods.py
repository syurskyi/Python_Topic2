# # -*- coding: utf-8 -*-
#
# # Атрибуты, имена которых начинаются и заканчиваются двумя знаками
# # подчёркивания, являются внутренними для Python и задают особые
# # свойства объектов. С одним из подобных атрибутов мы уже имели
# # дело ранее (документационная строка __doc__). Другим примером
# # может служить атрибут __class__, в котором хранится класс
# # данного объекта.
# #
# # Среди таких атрибутов есть методы. В документации Python
# # подобные методы называются методами со специальными именами,
# # однако в сообществе Python-разработчиков очень распространено
# # название «магические методы». Также встречается и название
# # «специальные методы». Они задают особое поведение объектов
# # и позволяют переопределять поведение встроенных функций и
# # операторов для экземпляров данного класса.
# #
# # Наиболее часто используемым специальным методом является
# # метод-конструктор __init__.
#
#
# c_ Complex
#     """
#     Комплексное число
#     """
#
#     ___ - ____ real_0.0 imaginary_0.0
#         """
#         Конструктор
#
#         :param real:      действительная часть
#         :param imaginary: мнимая часть
#         """
#         ____.r.. _ r..
#         ____.i... _ i...
#
#     ___ __r ____
#         """
#         Метод __repr__ возвращает строковое представление объекта, которое,
#         если это возможно, должно быть корректным выражением, создающим
#         аналогичный объект, иначе содержать его описание;
#         вызывается функцией repr.
#         """
#         r_ Complex /_ /_ / ____.r.. ____.i...
#
#     ___ __str__ ____
#         """
#         Метод __str__ возвращает предназначенное для человека строковое
#         представление объекта; вызывается функциями str, print и format.
#         """
#         r_  /_ /_ /__ /  ____.r..
#                               '+' i_ ____.i... >_ 0 e___ '-',
#                               ab. ____.i...
#
#     # Арифметические операции
#
#     ___ __a ____ o___
#         """
#         Метод __add__ определяет операцию сложения.
#         """
#         r_ Com.. ____.r.. + o___.r..
#                        ____.i... + o___.i...
#
#     ___ __n ____
#         """
#         Операция отрицания
#         """
#         r_ Com.. -____.r.. -____.i...
#
#     ___ __s ____ o___
#         """
#         Операция вычитания.
#         Сложение и отрицание уже определены, поэтому вычитание
#         можно определить через них
#         """
#         r_ ____ +  -o___
#
#     ___ __a ____
#         """
#         Модуль числа
#         """
#         r_ (____.r.. ** 2 + ____.i... ** 2) ** 0.5
#
#     # Операции сравнения
#
#     ___ __eq__ ____ o___
#         r_ ____.r.. __ o___.r.. an. ____.i... __ o___.i...
#
#     ___ __ne__ ____ o___
#         r_ no. (____ __ o___
#
#
# ___ m..
#     x _ ? 2 3.5
#     print rep. x
#     print('x _', ?)
#
#     y _ ? 5 7
#     print('y _', ?)
#
#     print('x + y _', x + y)
#     print('x - y _', x - y)
#
#     print('|x| _', abs(x))
#
#     print('(x == y) _', x == y)
#
#
# ____
#     m..