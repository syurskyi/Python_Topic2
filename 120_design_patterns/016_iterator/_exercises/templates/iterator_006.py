# # coding: utf-8
#
# """
# Итератор (Iterator) - паттерн поведения объектов.
#
# Предоставляет способ последовательного доступа ко всем элементам составного объекта,
# не раскрывая его внутреннего представления.
# """
#
#
# c_ IteratorBase o..
#     """Базовый класс итератора"""
#     ___ first
#         """Возвращает первый элемент коллекции.
#         Если элемента не существует возбуждается исключение IndexError."""
#         r_ N...
#
#     ___ last
#         """Возвращает последний элемент коллекции.
#         Если элемента не существует возбуждается исключение IndexError."""
#         r_ N...
#
#     ___ next
#         """Возвращает следующий элемент коллекции"""
#         r_ N...
#
#     ___ prev
#         """Возвращает предыдущий элемент коллекции"""
#         r_ N...
#
#     ___ current_item
#         """Возвращает текущий элемент коллекции"""
#         r_ N...
#
#     ___ i_d.. index
#         """Возвращает истину если элемент с указанным индексом существует, иначе ложь"""
#         r_ N...
#
#     ___ get_item index
#         """Возвращает элемент коллекции с указанным индексом, иначе возбуждает исключение IndexError"""
#         r_ N...
#
#
# c_ Iterator I..
#     ___ - list__N..
#         _list _ list_ or []
#         _current _ 0
#
#     ___ first
#         r_ _l__ 0
#
#     ___ last
#         r_ _l__ -1
#
#     ___ current_item
#         r_ _l__|_c..
#
#     ___ i_d.. index
#         last_index _ le. _l__ - 1
#         r_ 0 <_ ? <_ l_i..
#
#     ___ next
#         _c... +_ 1
#         __ no. i_d.. _c..
#             _c... _ 0
#         r_ c_i..
#
#     ___ prev
#         _c.. -_ 1
#         __ no. i_d.. _c..
#             _c.. _ le. _l__ - 1
#         r_ c_i..
#
#     ___ get_item index
#         __ no. i_d.. ?
#             r_ I.. 'Нет элемента с индексом: @'  ?
#         r_ _l__|?
#
#
# it _ I.. 'one', 'two', 'three', 'four', 'five'
# print ?.pr.. ___ i __ ra.. 5  # ['five', 'four', 'three', 'two', 'one']
# print ?.ne.. ___ i __ ra.. 5  # ['two', 'three', 'four', 'five', 'one']
