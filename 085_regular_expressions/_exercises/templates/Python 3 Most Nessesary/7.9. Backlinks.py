# # -*- coding: utf-8 -*-
#
# # В первом примере мы получили список с двумя элементами. Каждый элемент списка является кортежем. содержащим четыре
# # элемента. Все эти элементы соответствуют фрагментам, заключенным в шаблоне в круглые скобки. Первый элемент кортежа
# # содержит фрагмент, расположенный в первых круглых скобках, второй - во вторых круглых скобках
# # и т. д. Три последних элемента кортежа являются лишними. Чтобы они не выводились
# # в результатах, мы добавили символы ? : после каждой открываюшей круглой скобки. В результате список состоит только из
# # фрагментов, полностью соответствующих регулярному
# # выражению. К найденному фрагменту в круглых скобках внутри шаблона можно обратиться с помощью
# # механизма обратных ссылок. Для этого порядковый номер круглых скобок в шаблоне указывается после слеша- например,
# # так: \1. Нумерация скобок внутри шаблона начинается с 1.
#
# _______ __
#
# s _ "<b>Text1</b>Text2<I>Text3</I><b>Text4</b>"
# p _ __.c.. _ <  a-z 1? > .2?3_ </\1>  __.4? 5? __.6?   # 1. One or more occurrences
#                                                        # 2. Zero or more occurrences |  3. zero or one occurrence
#                                                        # 4. Makes a period (dot) match any character, including a newline
#                                                        # 5 .Either or | 6.Performs case-insensitive matching.
# ?.f.. ?
# # [('b', 'Text1'), ('I', 'Text3'), ('b', 'Text4')]
